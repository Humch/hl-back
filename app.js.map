{"version":3,"sources":["../src/app.js"],"names":["app","debug","err","console","error","use","bodyParser","json","urlencoded","extended","express","static","path","join","__dirname","indexRouter","req","res","next","Error","status","locals","message","get","listener","listen","log","address","port","process","on","exit"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAGA;;;;;;AAGA;AACA,IAAMA,MAAM,wBAAZ;;AALA;;AAMA,IAAMC,QAAQ,qBAAM,UAAN,CAAd;;AAEA,mBAAI,uBAAJ,EAA6B,aAA7B,EAA4C,UAAUC,GAAV,EAAe;AACzD,MAAIA,GAAJ,EAAS;AACP,WAAOC,QAAQC,KAAR,CAAcF,GAAd,CAAP;AACD;AACD,CAJF;;AAQAF,IAAIK,GAAJ,CAAQ,sBAAO,KAAP,CAAR;AACAL,IAAIK,GAAJ,CAAQC,qBAAWC,IAAX,EAAR;AACAP,IAAIK,GAAJ,CAAQC,qBAAWE,UAAX,CAAsB;AAC5BC,YAAU;AADkB,CAAtB,CAAR;;AAIAT,IAAIK,GAAJ,CAAQ,6BAAR;;AAEAL,IAAIK,GAAJ,CAAQK,kBAAQC,MAAR,CAAeC,eAAKC,IAAL,CAAUC,SAAV,EAAqB,QAArB,CAAf,CAAR;;AAEA;AACAd,IAAIK,GAAJ,CAAQ,MAAR,EAAgBU,eAAhB;;AAEA;AACAf,IAAIK,GAAJ,CAAQ,UAACW,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC1B,MAAMhB,MAAM,IAAIiB,KAAJ,CAAU,WAAV,CAAZ;AACAjB,MAAIkB,MAAJ,GAAa,GAAb;AACAF,OAAKhB,GAAL;AACD,CAJD;;AAMA;AACA;AACAF,IAAIK,GAAJ,CAAQ,UAACH,GAAD,EAAMc,GAAN,EAAWC,GAAX,EAAgBC,IAAhB,EAAyB;AAC/B;AACAD,MAAII,MAAJ,CAAWC,OAAX,GAAqBpB,IAAIoB,OAAzB;AACAL,MAAII,MAAJ,CAAWjB,KAAX,GAAmBY,IAAIhB,GAAJ,CAAQuB,GAAR,CAAY,KAAZ,MAAuB,aAAvB,GAAuCrB,GAAvC,GAA6C,EAAhE;AACA;AACAe,MAAIG,MAAJ,CAAWlB,IAAIkB,MAAJ,IAAc,GAAzB;AACAH,MAAIV,IAAJ,CAASL,GAAT;AACD,CAPD;;AASA;AACA,IAAMsB,WAAWxB,IAAIyB,MAAJ,CAAW,IAAX,EAAiB,YAAU;AAC1CtB,UAAQuB,GAAR,CAAY,uBAAuBF,SAASG,OAAT,GAAmBC,IAAtD,EAD0C,CACmB;AAC9D,CAFgB,CAAjB;;AAIA;AACAC,QAAQC,EAAR,CAAW,mBAAX,EAAgC,UAAC5B,GAAD,EAAS;AACvCD,QAAM,sBAAN,EAA8BC,GAA9B;AACA2B,UAAQE,IAAR,CAAa,CAAb;AACD,CAHD;;kBAKe/B,G;AACf","file":"app.js","sourcesContent":["import bodyParser from 'body-parser';\nimport cookieParser from 'cookie-parser';\nimport Debug from 'debug';\nimport express from 'express';\nimport logger from 'morgan';\nimport path from 'path';\nimport ncp from 'ncp';\n\n// IMPORT INDEX\nimport indexRouter from './routes/index';\n\n\n// CONST\nconst app = express();\nconst debug = Debug('back:app');\n\nncp('./json_files/reponses', './json_test', function (err) {\n  if (err) {\n    return console.error(err);\n  }\n });\n\n\n\napp.use(logger('dev'));\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({\n  extended: false\n}));\n\napp.use(cookieParser());\n\napp.use(express.static(path.join(__dirname, 'public')));\n\n// DEFINITION ROUTE INDEX = /API\napp.use('/api', indexRouter);\n\n// catch 404 and forward to error handler\napp.use((req, res, next) => {\n  const err = new Error('Not Found');\n  err.status = 404;\n  next(err);\n});\n\n// error handler\n/* eslint no-unused-vars: 0 */\napp.use((err, req, res, next) => {\n  // set locals, only providing error in development\n  res.locals.message = err.message;\n  res.locals.error = req.app.get('env') === 'development' ? err : {};\n  // render the error page\n  res.status(err.status || 500);\n  res.json(err);\n});\n\n// Port utilisÃ© pour le serveur en local\nconst listener = app.listen(8888, function(){\n  console.log('Listening on port ' + listener.address().port); //Listening on port 8888\n});\n\n// Handle uncaughtException\nprocess.on('uncaughtException', (err) => {\n  debug('Caught exception: %j', err);\n  process.exit(1);\n});\n\nexport default app;\n// module.exports = app;\n"]}